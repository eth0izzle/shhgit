input {
  udp {
    port => 8080
  }
}

filter {

  if "Matching file" in [message]  {
    grok {
      match => { "message" => "\[%{GREEDYDATA:location}\] Matching %{WORD:type} %{URIPATHPARAM:path} for %{GREEDYDATA:reason}\"" }
    }
  }

  if "match for" in [message]  {
    grok {
      match => { "message" => "\[%{GREEDYDATA:location}\] %{NUMBER:number} match for %{GREEDYDATA:reason} in %{WORD:type} %{URIPATHPARAM:path}: %{URIPROTO:uriproto}://(?:%{USER:user}(?::%{GREEDYDATA:password}[^@]*)?@)?(?:%{URIHOST:urihost})?(?:%{URIPATHPARAM:uripathparam})?" }
    }
  }

  if "Potential secret" in [message]  {
    grok {
      match => { "message" => "\[%{GREEDYDATA:location}\] %{GREEDYDATA:reason} in %{URIPATHPARAM:path} =%{SPACE}%{GREEDYDATA:secret}\"" }
    }
  }

  if "matches for" in [message]  {
    grok {
      match => { "message" => "\[%{GREEDYDATA:location}\] %{NUMBER:number} matches for %{GREEDYDATA:reason} in %{WORD:type} %{GREEDYDATA:paths}\"" }
    }
  }

  if "Google OAuth Key" in [message]  {
    grok {
      match => { "message" => "\[%{GREEDYDATA:location}\] %{NUMBER:number} matches for %{GREEDYDATA:reason} in %{WORD:type} %{GREEDYDATA:paths}\"" }
    }
  }

  if "Google Cloud API Key" in [message]  {
    grok {
      match => { "message" => "\[%{GREEDYDATA:location}\] %{NUMBER:number} match for %{GREEDYDATA:reason} in %{WORD:type} %{URIPATHPARAM:path}:%{SPACE}%{GREEDYDATA:key}\"" }
    }
  }

  mutate {
    split => {"paths" => "," }
  }

  if "Cloning in to" in [message]  {
    grok
    {
      match => { "message" => "\[%{GREEDYDATA:location}\] Cloning in to %{URIPATH:path}\"" }
      add_tag => ["cloning"]
    }
  }

  if "Failed to" in [message]  {
    grok
    {
      match => { "message" => "\"%{GREEDYDATA:errorMessage}\"" }
      add_tag => ["failed"]
    }
  }

  if "Cloning failed" in [message]  {
    grok
    {
      match => { "message" => "\"%{GREEDYDATA:errorMessage}\"" }
      add_tag => ["failed"]
    }
  }

  if "started. Loaded" in [message]  {
    grok
    {
      match => { "message" => "\"%{GREEDYDATA:errorMessage}\"" }
      add_tag => ["info"]
    }
  }

  if "calls remain" in [message]  {
    grok
    {
      match => { "message" => "\"%{GREEDYDATA:errorMessage}\"" }
      add_tag => ["info"]
    }
  }

  mutate {
      rename => { "[message]" => "[original]"}
  }
}

output {
  elasticsearch {
    id => "shhgit"
    hosts => ["localhost:9200"]
    index => "shhgit-%{+YYYY.MM.dd}"
  }
}
